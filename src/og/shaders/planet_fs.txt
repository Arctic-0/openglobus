precision highp float;
precision highp int;

const int MAX_TEX = 16;

varying vec2 vTextureCoord;

uniform int numTex;
uniform sampler2D uSamplerArr[MAX_TEX];
uniform float alfaArr[MAX_TEX];
uniform vec4 tcolorArr[MAX_TEX];
uniform vec3 texBiasArr[MAX_TEX];

void main(void) {

	vec4 white = vec4(1.0, 1.0, 1.0, 1.0);
	vec4 black = vec4(0.0, 0.0, 0.0, 1.0);
	vec4 res = vec4(1.0, 1.0, 1.0, 1.0);
	vec4 c;
		
    for( int i=0; i < MAX_TEX; i++ ) {
	    if( i < numTex ) {
			vec2 tc = texBiasArr[i].z * (vTextureCoord + vec2(texBiasArr[i].x, texBiasArr[i].y));
	        c = texture2D(uSamplerArr[i], vec2(tc.s, tc.t));
		    c = c == black ? white : c;
		    res *= c;
		}
	}

	gl_FragColor = res;
}