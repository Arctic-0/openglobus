precision highp float;

attribute vec3 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat4 projectionViewMatrix;
uniform float height;
uniform vec3 cameraPosition;

varying vec2 vTextureCoord;
varying float range;

const float C = 0.1;
const float far = 149.6e+9;
float logc = 2.0 / log( C * far + 1.0 );

void main(void) {
	range = distance(cameraPosition, aVertexPosition + normalize(aVertexPosition) * height);
	vTextureCoord = aTextureCoord;
    gl_Position = projectionViewMatrix * vec4(aVertexPosition + normalize(aVertexPosition) * height, 1.0);		
    gl_Position.z = ( log( C * gl_Position.w + 1.0 ) * logc - 1.0 ) * gl_Position.w;
}