precision highp float;

uniform vec4 tileOffsetArr[5];
uniform vec4 visibleExtentOffsetArr[5];
uniform vec4 transparentColorArr[5];

uniform sampler2D defaultTexture;
uniform sampler2D samplerArr[5];
uniform int samplerCount;

varying vec2 vTextureCoord;

// return 1 if v inside the box, return 0 otherwise
float insideBox(vec2 v, vec2 bottomLeft, vec2 topRight) {
    vec2 s = step(bottomLeft, v) - step(topRight, v);
    return s.x * s.y;   
}

void main(void) {
	
	gl_FragColor = texture2D( defaultTexture, vTextureCoord );

	if( samplerCount == 0 ) return;

	vec4 t = texture2D( samplerArr[0], tileOffsetArr[0].xy + vTextureCoord * tileOffsetArr[0].zw ) * insideBox(visibleExtentOffsetArr[0].xy + vTextureCoord * visibleExtentOffsetArr[0].zw, vec2(0.0), vec2(1.0));
	gl_FragColor = mix( gl_FragColor, t, transparentColorArr[0].a * t.a * smoothstep(0.35, 0.5, distance( t.rgb, transparentColorArr[0].rgb )));

	if( samplerCount == 1 ) return;

	t = texture2D( samplerArr[1], tileOffsetArr[1].xy + vTextureCoord * tileOffsetArr[1].zw ) * insideBox(visibleExtentOffsetArr[1].xy + vTextureCoord * visibleExtentOffsetArr[1].zw, vec2(0.0), vec2(1.0));
	gl_FragColor = mix( gl_FragColor, t, transparentColorArr[1].a * t.a * smoothstep(0.35, 0.5, distance( t.rgb, transparentColorArr[1].rgb )));

	//if( insideBox(visibleExtentOffsetArr[0].xy + vTextureCoord * visibleExtentOffsetArr[0].zw, vec2(0.0), vec2(1.0))==0.0 ) {
	//	gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);	    
	//} else {
	//	gl_FragColor = texture2D( samplerArr[0], tileOffsetArr[0].xy + vTextureCoord * tileOffsetArr[0].zw );
	//}

	//if( samplerCount == 1 ) return;

	//t = texture2D( samplerArr[1], tileOffsetArr[1].xy + vTextureCoord * tileOffsetArr[1].zw ) * insideBox(visibleExtentOffsetArr[1].xy + vTextureCoord * visibleExtentOffsetArr[1].zw, vec2(0.0), vec2(1.0));
	//gl_FragColor = mix( gl_FragColor, t, transparentColorArr[1].a * t.a * smoothstep(0.35, 0.5, distance( t.rgb, transparentColorArr[1].rgb )));

	//if( insideBox(visibleExtentOffsetArr[1].xy + vTextureCoord * visibleExtentOffsetArr[1].zw, vec2(0.0), vec2(1.0))==0.0 ) {
	//	gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);	    
	//} else {
	//	gl_FragColor = texture2D( samplerArr[1], tileOffsetArr[1].xy + vTextureCoord * tileOffsetArr[1].zw );
	//}

	//if( samplerCount == 2 ) return;
}