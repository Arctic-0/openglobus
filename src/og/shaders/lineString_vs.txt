attribute vec3 prev;
attribute vec3 current;
attribute vec3 next;
attribute vec2 order;

uniform mat4 projview;
uniform vec2 viewport;
uniform float thickness;
    
vec2 project(vec4 device){
    return (0.5 * device.xyz / device.w + 0.5).xy * viewport;
}

void main(){

    vec4 dCurrent = projview * vec4(current, 1.0);
    vec2 sCurrent = project(dCurrent);
    
	vec2 dirNext = project(projview * vec4(next, 1.0)) - sCurrent;
	vec2 sNormalNext = normalize(vec2(-dirNext.y, dirNext.x));

	vec2 dirPrev = normalize(project(projview * vec4(prev, 1.0)) - sCurrent);
	vec2 sNormalPrev = normalize(vec2(-dirPrev.y, dirPrev.x));

	vec2 dir = sNormalNext - sNormalPrev;
	float sinA = dirPrev.x * dir.y - dirPrev.y * dir.x;

	if( abs(sinA) < 0.2 ) {
		if(order.x == 1.0){
		    dir = sNormalPrev;   
		} else {
		    dir = sNormalNext;   
		}
	} else {
		dir *= order.x / sinA;
	}
	
    gl_Position = vec4((2.0 * (sCurrent + dir * thickness * order.y) / viewport - 1.0) * dCurrent.w, dCurrent.z, dCurrent.w);
}
